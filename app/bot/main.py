import asyncio
from app.utils.logger import logger
from loader import bot, dp
from app.repository.db import BaseRepository
from app.config import config
from handlers import register_all_handlers
from app.utils.set_bot_commands import set_default_commands


async def on_startup() -> None:
    logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")

    if config.DISABLE_DB_CHECK:
        logger.warning("‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–∫–ª—é—á–µ–Ω–∞")
    else:
        try:
            BaseRepository.initialize_pool(
                database=config.DB_CONFIG["database"],
                user=config.DB_CONFIG["user"],
                password=config.DB_CONFIG["password"],
                host=config.DB_CONFIG["host"],
                port=config.DB_CONFIG["port"],
                min_connections=config.DB_CONFIG.get("min_connections", 1),
                max_connections=config.DB_CONFIG.get("max_connections", 10),
            )
            logger.info("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
            raise

    logger.info("üì¶ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...")
    register_all_handlers(dp)

    logger.info("‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞...")
    await set_default_commands(bot)

    logger.info("ü§ñ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É.")


async def on_shutdown() -> None:
    logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")

    if config.DISABLE_DB_CHECK:
        logger.warning("‚ö†Ô∏è –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    else:
        try:
            if BaseRepository._connection_pool:
                BaseRepository._connection_pool.closeall()
                logger.info("‚úÖ –í—Å–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç—ã")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å –ë–î: {e}")


async def main() -> None:
    logger.info("üö¶ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")

    await on_startup()

    try:
        await dp.start_polling(bot)
    except Exception as e:
        logger.exception(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
    finally:
        await on_shutdown()


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("‚õî –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é (Ctrl+C)")
