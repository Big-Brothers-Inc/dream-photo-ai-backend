from aiogram import Router, F, types
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.filters import Command
from app.repository.admin import AdminRepository
from app.utils.permissions import has_admin_permission

router = Router()
repo = AdminRepository()

ACCESS_LEVELS = [
    ("BASE", "–ú–æ–∂–µ—Ç —Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç—É—Å—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –ø–æ ID"),
    ("LORA", "BASE + –ú–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –º–æ–¥–µ–ª–∏"),
    ("BAN", "LORA + –±–∞–Ω–∏—Ç—å/—Ä–∞–∑–±–∞–Ω–∏–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"),
    ("HR", "BAN + –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞–º"),
    ("CEO", "–º–æ–∂–µ—Ç –≤—Å—ë –≤—ã—à–µ + –¥–µ–ª–∞—Ç—å –ø—Ä–æ–º–æ –∫–æ–¥—ã + —Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∫—É –¥–µ—Ç–∞–ª—å–Ω—É—é —Å –±–∞–±–∫–∞–º–∏")
]


@router.message(Command("list_admins"))
async def list_admins_start(message: Message):
    if not has_admin_permission(message.from_user.id, "HR"):
        return await message.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f"{status} - {desc[:30]}...", callback_data=f"adminlist:{status}")]
        for status, desc in ACCESS_LEVELS
    ] + [
        [InlineKeyboardButton(text="üìã –í—Å–µ", callback_data="adminlist:ALL")],
        [InlineKeyboardButton(text="‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="adminlist:CANCEL")]
    ])

    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:", reply_markup=keyboard)


@router.callback_query(F.data.startswith("adminlist:"))
async def handle_adminlist_selection(callback: CallbackQuery):
    action = callback.data.split(":")[1]

    if action == "CANCEL":
        await callback.message.edit_text("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
        return await callback.answer()

    if action == "ALL":
        admins = repo.list_admins()
        title = "üìã –í—Å–µ –∞–¥–º–∏–Ω—ã"
    else:
        admins = repo.list_admins(status=action)
        title = f"üìã –ê–¥–º–∏–Ω—ã —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º: {action}"

    if not admins:
        await callback.message.edit_text(f"{title}\n\n–ü–æ–∫–∞ —á—Ç–æ –∞–¥–º–∏–Ω–æ–≤ –Ω–µ—Ç üôà")
        return await callback.answer()

    admin_lines = [
        f"üÜî <code>{a['user_id']}</code> | –°—Ç–∞—Ç—É—Å: <b>{a['status']}</b> | –ê–∫—Ç–∏–≤–µ–Ω: {'‚úÖ' if a['is_active'] else '‚ùå'}"
        for a in admins
    ]

    text = f"{title}\n\n" + "\n".join(admin_lines)
    await callback.message.edit_text(text, reply_markup=callback.message.reply_markup)
    await callback.answer()
